<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AllColumn" xml:space="preserve">
    <value>表字段</value>
    <comment>表字段</comment>
  </data>
  <data name="AllTable" xml:space="preserve">
    <value>表</value>
    <comment>表</comment>
  </data>
  <data name="CodeType" xml:space="preserve">
    <value>程序数据类型</value>
    <comment>程序数据类型</comment>
  </data>
  <data name="ColumnId" xml:space="preserve">
    <value>字段编号</value>
    <comment>字段编号</comment>
  </data>
  <data name="ColumnName" xml:space="preserve">
    <value>字段名称</value>
    <comment>字段名称</comment>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>备注</value>
    <comment>备注</comment>
  </data>
  <data name="ConnectDB" xml:space="preserve">
    <value>连接数据库</value>
    <comment>连接数据库</comment>
  </data>
  <data name="ConnectDBFaild" xml:space="preserve">
    <value>连接数据库失败</value>
    <comment>连接数据库失败</comment>
  </data>
  <data name="ConnectionString" xml:space="preserve">
    <value>数据库连接字符串</value>
    <comment>数据库连接字符串</comment>
  </data>
  <data name="DBType" xml:space="preserve">
    <value>数据库数据类型</value>
    <comment>数据库数据类型</comment>
  </data>
  <data name="DefaultValue" xml:space="preserve">
    <value>默认值</value>
    <comment>默认值</comment>
  </data>
  <data name="ErrorTitle" xml:space="preserve">
    <value>错误</value>
    <comment>错误</comment>
  </data>
  <data name="Error_GetColumn" xml:space="preserve">
    <value>加载表 {0} 的字段出错</value>
    <comment>加载表 {0} 的字段出错</comment>
  </data>
  <data name="Error_GetTable" xml:space="preserve">
    <value>加载数据库表出错</value>
    <comment>加载数据库表出错</comment>
  </data>
  <data name="Error_NoConnectionString" xml:space="preserve">
    <value>必须填写数据库连接字符串</value>
    <comment>必须填写数据库连接字符串</comment>
  </data>
  <data name="Error_NoDBInfoGetter" xml:space="preserve">
    <value>必须选择一项数据库信息采集器</value>
    <comment>必须选择一项数据库信息采集器</comment>
  </data>
  <data name="Error_NoGenTable" xml:space="preserve">
    <value>至少选择一张需要生成的表</value>
    <comment>至少选择一张需要生成的表</comment>
  </data>
  <data name="Error_NoNamespace" xml:space="preserve">
    <value>必须填写命名空间</value>
    <comment>必须填写命名空间</comment>
  </data>
  <data name="Error_NoProjectName" xml:space="preserve">
    <value>必须填写项目名称</value>
    <comment>必须填写项目名称</comment>
  </data>
  <data name="Error_NoSettingName" xml:space="preserve">
    <value>必须填写配置名称</value>
    <comment>必须填写配置名称</comment>
  </data>
  <data name="Error_NoTargetPath" xml:space="preserve">
    <value>必须填写生成的目标路径</value>
    <comment>必须填写生成的目标路径</comment>
  </data>
  <data name="Error_NoTemplatePath" xml:space="preserve">
    <value>必须选择一项生成模板</value>
    <comment>必须选择一项生成模板</comment>
  </data>
  <data name="Error_NullCodeGetter" xml:space="preserve">
    <value>没有选择一项程序信息采集器</value>
    <comment>没有选择一项程序信息采集器</comment>
  </data>
  <data name="Error_NullDBGetter" xml:space="preserve">
    <value>没有选择一项数据库信息采集器</value>
    <comment>没有选择一项数据库信息采集器</comment>
  </data>
  <data name="Error_NullProjectInfo" xml:space="preserve">
    <value>没有项目信息</value>
    <comment>没有项目信息</comment>
  </data>
  <data name="Error_OpenDB" xml:space="preserve">
    <value>打开数据库连接错误</value>
    <comment>打开数据库连接错误</comment>
  </data>
  <data name="Finish" xml:space="preserve">
    <value>完成</value>
    <comment>完成</comment>
  </data>
  <data name="FKColumnName" xml:space="preserve">
    <value>外键关联字段名称</value>
    <comment>外键关联字段名称</comment>
  </data>
  <data name="FKName" xml:space="preserve">
    <value>外键约束名称</value>
    <comment>外键约束名称</comment>
  </data>
  <data name="FKTableName" xml:space="preserve">
    <value>外键关联表名称</value>
    <comment>外键关联表名称</comment>
  </data>
  <data name="GenFaild" xml:space="preserve">
    <value>代码生成失败</value>
    <comment>代码生成失败</comment>
  </data>
  <data name="GenProgress" xml:space="preserve">
    <value>代码生成中</value>
    <comment>代码生成中</comment>
  </data>
  <data name="GenSucc" xml:space="preserve">
    <value>代码生成成功</value>
    <comment>代码生成成功</comment>
  </data>
  <data name="GenTargetPath" xml:space="preserve">
    <value>目标生成路径</value>
    <comment>目标生成路径</comment>
  </data>
  <data name="InfoTitle" xml:space="preserve">
    <value>提示</value>
    <comment>提示</comment>
  </data>
  <data name="IsAutoNum" xml:space="preserve">
    <value>自动编号</value>
    <comment>自动编号</comment>
  </data>
  <data name="IsClearTarget" xml:space="preserve">
    <value>是否生成前清空目标目录</value>
    <comment>是否生成前清空目标目录</comment>
  </data>
  <data name="IsFK" xml:space="preserve">
    <value>是否外键</value>
    <comment>是否外键</comment>
  </data>
  <data name="IsGen" xml:space="preserve">
    <value>是否生成</value>
    <comment>是否生成</comment>
  </data>
  <data name="IsGenUI" xml:space="preserve">
    <value>是否生成画面</value>
    <comment>是否生成画面</comment>
  </data>
  <data name="IsInput" xml:space="preserve">
    <value>是否生成输入</value>
    <comment>是否生成输入</comment>
  </data>
  <data name="IsNullable" xml:space="preserve">
    <value>是否为空</value>
    <comment>是否为空</comment>
  </data>
  <data name="IsPK" xml:space="preserve">
    <value>是否主键</value>
    <comment>是否主键</comment>
  </data>
  <data name="IsSearchCondition" xml:space="preserve">
    <value>是否作为画面查询条件</value>
    <comment>是否作为画面查询条件</comment>
  </data>
  <data name="IsSearchResult" xml:space="preserve">
    <value>是否作为画面查询结果</value>
    <comment>是否作为画面查询结果</comment>
  </data>
  <data name="IsUnique" xml:space="preserve">
    <value>是否唯一项</value>
    <comment>是否唯一项</comment>
  </data>
  <data name="MaxLength" xml:space="preserve">
    <value>最大长度</value>
    <comment>最大长度</comment>
  </data>
  <data name="MaxValue" xml:space="preserve">
    <value>最大值</value>
    <comment>最大值</comment>
  </data>
  <data name="MinValue" xml:space="preserve">
    <value>最小值</value>
    <comment>最小值</comment>
  </data>
  <data name="Namespace" xml:space="preserve">
    <value>命名空间</value>
    <comment>命名空间</comment>
  </data>
  <data name="Precision" xml:space="preserve">
    <value>有效位数</value>
    <comment>有效位数</comment>
  </data>
  <data name="ProjectDisplayName" xml:space="preserve">
    <value>项目备注</value>
    <comment>项目备注</comment>
  </data>
  <data name="ProjectName" xml:space="preserve">
    <value>项目名称</value>
    <comment>项目名称</comment>
  </data>
  <data name="ReferenceFolder" xml:space="preserve">
    <value>引用目录</value>
    <comment>引用目录</comment>
  </data>
  <data name="SavedSettings" xml:space="preserve">
    <value>已有配置</value>
    <comment>已有配置</comment>
  </data>
  <data name="SaveGenSetting" xml:space="preserve">
    <value>保存配置</value>
    <comment>保存配置</comment>
  </data>
  <data name="Scale" xml:space="preserve">
    <value>有效小数位</value>
    <comment>有效小数位</comment>
  </data>
  <data name="SettingName" xml:space="preserve">
    <value>配置名称</value>
    <comment>配置名称</comment>
  </data>
  <data name="SettingSaveFaild" xml:space="preserve">
    <value>保存配置错误</value>
    <comment>保存配置错误</comment>
  </data>
  <data name="SettingSaveSucc" xml:space="preserve">
    <value>保存配置成功</value>
    <comment>保存配置成功</comment>
  </data>
  <data name="SqlType" xml:space="preserve">
    <value>数据库数据类型</value>
    <comment>数据库数据类型</comment>
  </data>
  <data name="StartGen" xml:space="preserve">
    <value>开始生成</value>
    <comment>开始生成</comment>
  </data>
  <data name="TableName" xml:space="preserve">
    <value>表名</value>
    <comment>表名</comment>
  </data>
  <data name="TemplatePath" xml:space="preserve">
    <value>模板路径</value>
    <comment>模板路径</comment>
  </data>
  <data name="ViewFolder" xml:space="preserve">
    <value>浏览</value>
    <comment>浏览</comment>
  </data>
  <data name="WarningTitle" xml:space="preserve">
    <value>警告</value>
    <comment>警告</comment>
  </data>
  <data name="Error_SameSettingName" xml:space="preserve">
    <value>存在同名的配置文件，是否覆盖已有的？</value>
    <comment>存在同名的配置文件，是否覆盖已有的？</comment>
  </data>
</root>